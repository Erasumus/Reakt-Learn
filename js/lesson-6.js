"use strict";
//////////////////////////////////////////////
//1. –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ
const arr = [1, 2, 3, 6, 8];
console.log(arr);

//1.1. —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω—Ü–µ –º–∞—Å—Å–∏–≤–∞
arr.pop();
console.log(arr);

//1.2. –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω—Ü–µ –º–∞—Å—Å–∏–≤–∞
arr.push(10);
console.log(arr);

const str = prompt("", "");
//1.3. —É–±–∏—Ä–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º [, ]
const products = str.split(", ");
//1.4. –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –ø–æ—Ä—è–¥–∫—É (–Ω–æ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫–∏)
products.sort();
//1.5. –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Å—å –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º [; ]
console.log(products.join('; '));
//1.6. –ù–æ –º–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫ –∏–º–µ–Ω–Ω–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—Å–ª–∏ —Å–¥–µ–ª–∞—Ç—å callback
arr.sort(compareNum);
function compareNum(a, b){
    return a - b;
}
console.log(arr);

//////////////////////////////////////////////
//2. –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –ø—Ä–æ–±–µ–≥ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º
//2.1. console.log(arr.length)
let massive1 = "[";
for (let i = 0; i < arr.length; i++) {
    massive1 += arr[i] + ", ";
}
console.log(massive1 + "]");

//–µ—Å–ª–∏ –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–∞–∫–æ–π-—Ç–∞ —Å–æ—Ç—ã–π —ç–ª–µ–º–µ–Ω—Ç, —Ç–æ –º–∞—Å—Å–∏–≤ —Å–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
//arr[99] = 0;
console.log(arr.length);
console.log(arr);

//2.2. value(name) of arr
let massive2 = "[";
for (let value of arr) {
    massive2 += value + ", ";
}
console.log(massive2 + "]");

//2,3 Foreach –º–µ—Ç–æ–¥ (–≤–∞–∂–Ω–æ–µ)
arr.forEach(function (item, i, arr) {
    console.log(` [${i}] : ${item} –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞: ${arr}`);
});

arr.forEach((item, i, arr) => {
    console.log(` [${i}] : ${item} –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞: ${arr}`);
});

//–≠–¥–∞–∫–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ Foreach (–º–Ω–µ –ø—Ä–æ—â–µ –±—ã–ª–æ –µ–≥–æ —Ç–∞–∫ —Ä–∞–∑–æ–±—Ä–∞—Ç—å)
function sliceFruit(fruit) {
    console.log("–†–∞–∑—Ä–µ–∑–∞—é " + fruit + "!");
}

const fruits = ["üçé", "üçä", "üçã", "üçì", "ü•ù"];
fruits.forEach(sliceFruit);

//arr.map - –∏–∑–º–µ–Ω–µ–Ω–∏–µ
//arr.every/some
//arr.filter - –æ—Ç—Ñ–∏–ª—Ç—Ä—Ä–æ–≤–∞—Ç—å
//arr.reduce
